create database quarkussocial;

select * from users;
truncate users;
drop table users;

--table of users
--if create id bigserial, then database will control sequence
--could, use bigint, and change the strategy from jpa to AUTO.
-- Table: public.users

-- DROP TABLE public.users;

CREATE TABLE public.users
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    --id bigserial NOT NULL,
    age integer NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.users
    OWNER to quarkus;





select * from posts;
truncate posts;
drop table posts;




-- Table: public.posts
-- DROP TABLE public.posts;
CREATE TABLE public.posts
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    date_time timestamp without time zone,
    post_text character varying(144) COLLATE pg_catalog."default",
    user_id bigint,
    CONSTRAINT posts_pkey PRIMARY KEY (id),
    CONSTRAINT fk5lidm6cqbc7u4xhqpxm898qme FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.posts
    OWNER to quarkus;